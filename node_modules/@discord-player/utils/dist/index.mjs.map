{"version":3,"sources":["../src/Collection.ts","../src/Queue.ts","../src/EventEmitter.ts","../src/utils.ts","../src/Errors.ts","../src/index.ts"],"sourcesContent":["import { Collection as CollectionNative, Keep, ReadonlyCollection } from '@discordjs/collection';\n\nexport class Collection<K = unknown, V = unknown> extends CollectionNative<K, V> {\n    #array!: V[] | null;\n\n    /**\n     * @returns {Array<V>} Array of this collection\n     */\n    public array(): V[] {\n        if (this.#array) return this.#array;\n        this.#array = [...this.values()];\n        return this.#array;\n    }\n\n    public set(key: K, value: V): this {\n        this.#array = null;\n        super.set(key, value);\n        return this;\n    }\n\n    public delete(key: K): boolean {\n        this.#array = null;\n        return super.delete(key);\n    }\n}\n","import { inspect } from 'util';\n\nexport type QueueStrategy = 'LIFO' | 'FIFO';\n\nexport type QueueItemFilter<T, R = boolean> = (value: T, idx: number, array: T[]) => R;\n\nexport class Queue<T = unknown> {\n    public store: T[];\n    public constructor(public strategy: QueueStrategy = 'FIFO', initializer: T[] = []) {\n        if (!['FIFO', 'LIFO'].includes(strategy)) throw new TypeError(`Invalid queue strategy \"${strategy}\"!`);\n        this.store = Array.isArray(initializer) ? initializer : [];\n\n        Object.defineProperty(this, 'store', {\n            writable: true,\n            configurable: true,\n            enumerable: false\n        });\n    }\n\n    public get data() {\n        return this.toArray();\n    }\n\n    public static from<T>(data: T[], strategy: QueueStrategy = 'FIFO') {\n        return new Queue<T>(strategy, data);\n    }\n\n    public isFIFO() {\n        return this.strategy === 'FIFO';\n    }\n\n    public isLIFO() {\n        return this.strategy === 'LIFO';\n    }\n\n    public add(item: T | T[]) {\n        if (this.strategy === 'FIFO') {\n            if (Array.isArray(item)) {\n                this.store.push(...item);\n            } else {\n                this.store.push(item);\n            }\n        } else {\n            if (Array.isArray(item)) {\n                this.store.unshift(...item);\n            } else {\n                this.store.unshift(item);\n            }\n        }\n    }\n\n    public clear() {\n        this.store = [];\n    }\n\n    public shuffle() {\n        for (let i = this.store.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [this.store[i], this.store[j]] = [this.store[j], this.store[i]];\n        }\n    }\n\n    public remove(itemFilter: QueueItemFilter<T>) {\n        const items = this.store.filter(itemFilter);\n        if (items.length) this.store = this.store.filter((res) => !items.includes(res));\n    }\n\n    public removeOne(itemFilter: QueueItemFilter<T>) {\n        const item = this.store.find(itemFilter);\n        if (item) this.store = this.store.filter((res) => res !== item);\n    }\n\n    public find(itemFilter: QueueItemFilter<T>) {\n        return this.store.find(itemFilter);\n    }\n\n    public filter(itemFilter: QueueItemFilter<T>) {\n        return this.store.filter(itemFilter);\n    }\n\n    public some(itemFilter: QueueItemFilter<T>) {\n        return this.store.some(itemFilter);\n    }\n\n    public every(itemFilter: QueueItemFilter<T>) {\n        return this.store.every(itemFilter);\n    }\n\n    public map<R = T>(itemFilter: QueueItemFilter<T, R>) {\n        const arr = this.toArray();\n        return arr.map(itemFilter);\n    }\n\n    public at(idx: number) {\n        const arr = this.toArray();\n        return typeof Array.prototype.at === 'function' ? arr.at(idx) : arr[idx];\n    }\n\n    public dispatch() {\n        return this.store.shift();\n    }\n\n    public clone() {\n        return new Queue(this.strategy, this.store.slice());\n    }\n\n    public get size() {\n        return this.store.length;\n    }\n\n    public toString() {\n        return `Queue<${this.store.length} items>`;\n    }\n\n    public toArray() {\n        return this.store.slice();\n    }\n\n    public toJSON() {\n        return this.store;\n    }\n\n    public [inspect.custom]() {\n        return `${this.constructor.name} {\\n  strategy: '${this.strategy}',\\n  data: ${inspect(this.data, {\n            showHidden: false,\n            colors: true,\n            depth: 1,\n            maxArrayLength: 5\n        })}\\n}`;\n    }\n}\n","export { EventEmitter } from 'node:events';\n","function createEnum<K extends string | number | symbol>(data: K[]) {\n    const obj = {} as Record<K, K>;\n\n    for (const item of data) obj[item] = item;\n\n    return Object.freeze(obj);\n}\n\nexport { createEnum, createEnum as keyMirror };\n","export type PlayerExceptionMessage = string | Record<string, unknown>;\n\nexport class PlayerException extends Error {\n    public constructor(message: PlayerExceptionMessage) {\n        super(typeof message === 'string' ? message : JSON.stringify(message, null, 2));\n    }\n}\n","export * from './Collection';\nexport * from './Queue';\nexport * from './EventEmitter';\nexport * from './utils';\nexport * from './Errors';\n\n// eslint-disable-next-line @typescript-eslint/no-inferrable-types\nexport const version: string = '0.2.1';\n"],"mappings":"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","names":[]}