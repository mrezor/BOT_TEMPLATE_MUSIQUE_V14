import { Client } from "../client";
import { Song } from "../songs/song";
export declare const ArtistSorts: readonly ["title", "popularity"];
export declare type IArtistSorts = typeof ArtistSorts[number];
export interface IArtistGetSongsOptions {
    sort: IArtistSorts;
    page: number;
    perPage: number;
}
export declare class Artist {
    readonly client: Client;
    partial: boolean;
    name: string;
    id: number;
    url: string;
    thumbnail: string;
    image: string;
    iq: number;
    verified: {
        normal: boolean;
        meme: boolean;
    };
    socialmedia: {
        facebook?: string;
        twitter?: string;
    };
    _raw: any;
    constructor(client: Client, res: any, partial?: boolean);
    /**
     * Fetches the songs of the Artist (Requires Key)
     * @example const Songs = await Artist.songs();
     */
    songs(options?: Partial<IArtistGetSongsOptions>): Promise<Song[]>;
    /**
     * Fetches All Information about the Artist and updates all the existing Properties (Requires Key)
     * @example const NewArtist = await Artist.fetch();
     */
    fetch(): Promise<Artist>;
}
